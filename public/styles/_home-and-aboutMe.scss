@use "variables" as *;
@use "sass:list";
@use "sass:map";
@use 'sass:math';
@use "sass:color";

$fontBreakpoints: (
  375: 35,
  390: 36.5,
  414: 39,
  430: 41,
  1280: 63,
  1440: 72,
  1600: 80,
  1720: 87
);

@mixin responsive-font($property) {
  $keys: map.keys($fontBreakpoints);

  @each $breakpoint, $size in $fontBreakpoints {
    $next-index: list.index($keys, $breakpoint) + 1;

    // Check if there is a next breakpoint
    @if $next-index <= list.length($keys) {
      $next-breakpoint: list.nth($keys, $next-index);
      $next-size: map.get($fontBreakpoints, $next-breakpoint);

      @media (min-width: #{$breakpoint}px) and (max-width: #{$next-breakpoint}px) {
        & {
          #{$property}: calc(
            #{$size}px + (#{$next-size} - #{$size}) * ((100vw - #{$breakpoint}px) / (#{$next-breakpoint} - #{$breakpoint}))
          );
        }
      }
    }
  }

  // Clamp below the smallest breakpoint
  @media (max-width: #{list.nth($keys, 1)}px) {
    & { #{$property}: #{map.get($fontBreakpoints, list.nth($keys, 1))}px }
  }

  // Clamp above the largest breakpoint
  @media (min-width: #{list.nth($keys, list.length($keys))}px) {
    & { #{$property}: #{map.get($fontBreakpoints, list.nth($keys, list.length($keys)))}px }
  }
}


.homePage {
  background-color: $deepBlack;
  height: 100vh;
  position: relative;

  header {
    position: absolute;
    z-index: 10;
  }

  &--container {
    display: flex;
    height: 100vh;
  }

  &--background {
    width: 50%;
    background-image: url("../img/Bkg-Alessandro.jpg");
    background-size: contain;
    background-position: bottom left;
    background-repeat: no-repeat;
  }

  &--content {
    width: 50%;
    padding: $standardMargin-X2;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;

    div[data-content-id] {  // ❗️Generated by NuxtContent❗️
      width: 100%;
      max-width: 800px;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      flex-wrap: wrap;
      pointer-events: none; // So it does not interfere with the Particle effect
    } 
    h1 {
      font-size: 10rem;
      text-transform: uppercase;
      letter-spacing: -1px;
      line-height: 0.9;
      color: $lightGrey;

      @include Barlow(500);

      & > span {
        @include Barlow(600);

        font-size: 14rem;
      }
    }

    h2 {
      white-space: nowrap;
      letter-spacing: -1px;
      line-height: 0.85;
      color: $accentcolor;
      margin-top: 0.5em;

      @include BodoniModa(500);
      @include responsive-font(font-size);

      & span.vividColor { color: $vividColor }
    }
  }

  &--arrow {
    cursor: pointer;
    bottom: $standardMargin; 
    z-index: 10;
    height: 8rem;
    width: 12rem;
    margin: 0 auto;

    & > a {
      display: block;
      height: 100%;
      width: 100%;
    }
  }
}

.aboutPage {
  background-image: linear-gradient(180deg, $deepBlack, $darkGrey);
  position: relative;

  &--firstPart,
  &--secondPart { min-height: 100vh }
  &--headline {
    margin-bottom: $standardMargin-X2;

    h2 {
      @include BodoniModa(500);
  
      color: $washedGrey;
      display: inline-block;
      position: relative;
      z-index: 1;
      text-shadow: 0 0 1px rgba(0, 0, 0, 0.5);

      &::after {
        content: "";
        display: block;
        height: 0.25em;
        width: 100%;
        transform: scaleX(0);
        background-color: $vividColor;
        position: relative;
        bottom: 0;
        z-index: -1;
        animation: none;
      }

      &.active::after { 
        animation: slideIn 0.8s ease-in forwards;
        animation-delay: 0.2s; 
      }

      @keyframes slideIn {
        0% { transform: scaleX(0) }
        100% { transform: scaleX(100%) }
      }
    }
    h4 { 
      margin-top: $standardMargin-X3;
      margin-bottom: $standardMargin; 
    }
  }
  &--lottie {
    float: right; 
    width: 20%; 
    margin: 0 0 4rem 4rem;

    @media screen and (max-width: map.get($breakpoints, mobile)) {
      float: none;
      width: auto;
      margin: 0 0 4rem 0;
    }
  }

  p { text-align: justify }

  &--image {
    border-radius: 16px;
    background-image: linear-gradient(
      13deg,
      hsl(349deg 59% 60%) 0%,
      hsl(1deg 60% 65%) 25%,
      hsl(12deg 63% 66%) 50%,
      hsl(21deg 62% 67%) 75%,
      hsl(28deg 58% 70%) 100%
    );
    padding: 4rem;
    margin-bottom: 2rem;
    border: 1px solid rgba(256, 256, 256, 1);

    & > img { 
      opacity: 0.75;
      filter: drop-shadow(0px 0px 6px black)
    }
  }
}

span.bigCircle[class*="inlineIcon--"] {
  $circleSize: 30rem;

  width: $circleSize !important;
  height: $circleSize !important;
  border-radius: 50%;
  shape-outside: circle(50%);
  float: left;
  margin-right:  math.div(-$circleSize, 6);
  background-color: $vueGreen;
  position: relative;
  left: math.div(-$circleSize, 4);

  &::before {
      background-color: $limeGreen !important;
      mask-size: 60% !important;
  }
}

.skillsPage {
  position: relative;
  background-image: radial-gradient(
    circle at 50% 100%,
    color.scale($darkGrey, $lightness: +15%, $space: oklch) 0%, color.scale($darkGrey, $lightness: +15%, $space: oklch) 20%,
    color.scale($darkGrey, $lightness: +12%, $space: oklch) 20%, color.scale($darkGrey, $lightness: +12%, $space: oklch) 28%,
    color.scale($darkGrey, $lightness: +9%, $space: oklch) 28%, color.scale($darkGrey, $lightness: +9%, $space: oklch) 36%,
    color.scale($darkGrey, $lightness: +6%, $space: oklch) 36%, color.scale($darkGrey, $lightness: +6%, $space: oklch) 44%,
    color.scale($darkGrey, $lightness: +3%, $space: oklch) 44%, color.scale($darkGrey, $lightness: +3%, $space: oklch) 52%,
    #1f1f25 52%
  );
  backdrop-filter: blur(16px) ;
  -webkit-backdrop-filter: blur(16px);

  &--navigation {
    margin-top: $standardMargin-X3;

    ul {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      margin-bottom: 4rem;

      li {
        width: 18%;
        display: inline-block;
        margin: 2%;
        padding: 3rem;
        backdrop-filter: blur(12px) ;
        -webkit-backdrop-filter: blur(12px);
        background-color: color.adjust($medGrey, $alpha: -0.8);
        border-radius: 12px;
        border: 1px solid rgba(255, 255, 255, 0.125);
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);

        &:hover { 
          background-color: color.adjust($medGrey, $alpha: -0.0);
          
          &::before {
            content: "";
            z-index: -1;
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: linear-gradient(-45deg, color.adjust($limeGreen, $alpha: -0.2) 5%, color.adjust($vueGreen, $alpha: -0.2) 100% );
            transform: translate3d(0px, 20px, 0) scale(0.95);
            filter: blur(48px);
            opacity: var(0.7);
            transition: opacity 0.3s;
            border-radius: inherit;
          }
          &::after {
            content: "";
            z-index: -1;
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: inherit;
            border-radius: inherit;
          }
        }
        &:first-child { display: none }
        & > a {
          display: flex;
          width: 100%;
          height: 100%;

          & > img { 
            object-fit: contain;
            opacity: 0.6;
            transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1);

            &:hover { 
              opacity: 1;
              transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            }
          }
        }
        
        @media screen and (max-width: map.get($breakpoints, mobile)) {
          width: 46%;
          padding: 1.5rem;
        }
      }
    }
  }
  &--otherSkills {
    ol {
      display: flex;
      flex-wrap: wrap;
      list-style: none;
      justify-content: center;
      padding: 0;
      margin: 0;

      & > li {
        display: inline-block;
        margin: 0 2rem 4rem 2rem;

        &::after {
          content: attr(alt);
          color: antiquewhite;
          display: block;
        }

        & img {
          width: 6vw;
          height: 6vw;
          object-fit: contain;
        }
        figure { 
          figcaption {
            @include Barlow(600);

            color: $lightGrey;
            
            font-size: 2rem;
            text-align: center;
            letter-spacing: 0.025em;
            text-transform: uppercase;
            margin-top: 0.5em;
          }
        }
      }
    }
  }
}


@media screen and (max-width: 600px) {
  .homePage {
    header { display: none } // Check it out later when the Skills page is ready

    &--background {
      width: 100%;
      height: 100vh;
      position: absolute;
      background-position: bottom center;
    }
    &--content {
      width: 100%;
      height: 100vh;
      position: relative;
      align-items: flex-start;
    }
    &--arrow {
      left: auto;
      transform: none;
      align-self: flex-end;
      margin-top: $standardMargin-X2;
    }
  }
}