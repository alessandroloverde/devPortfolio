@use "variables" as *;
@use "sass:list";
@use "sass:map";
@use 'sass:math';
@use "sass:color";


$fontBreakpoints: (
  375: 35,
  390: 36.5,
  414: 39,
  430: 41,
  480: 46,
  560: 55,
  640: 63,
  720: 71,
  960: 42,
  1024: 46,
  1152: 52,
  1280: 59,
  1440: 68,
  1600: 76,
  1720: 83
);

@mixin responsive-font($property) {
  $keys: map.keys($fontBreakpoints);

  @each $breakpoint, $size in $fontBreakpoints {
    $next-index: list.index($keys, $breakpoint) + 1;

    // Check if there is a next breakpoint
    @if $next-index <= list.length($keys) {
      $next-breakpoint: list.nth($keys, $next-index);
      $next-size: map.get($fontBreakpoints, $next-breakpoint);

      @media (min-width: #{$breakpoint}px) and (max-width: #{$next-breakpoint}px) {
        & {
          #{$property}: calc(
            #{$size}px + (#{$next-size} - #{$size}) * ((100vw - #{$breakpoint}px) / (#{$next-breakpoint} - #{$breakpoint}))
          );
        }
      }
    }
  }

  // Clamp below the smallest breakpoint
  @media (max-width: #{list.nth($keys, 1)}px) {
    & { #{$property}: #{map.get($fontBreakpoints, list.nth($keys, 1))}px }
  }

  // Clamp above the largest breakpoint
  @media (min-width: #{list.nth($keys, list.length($keys))}px) {
    & { #{$property}: #{map.get($fontBreakpoints, list.nth($keys, list.length($keys)))}px }
  }
}

.aboutPage,
.skillsPage {
  @include responsive-property("padding", $pageMargin);
}
.homePage {
  background-color: $deepBlack;
  height: 100vh;
  position: relative;

  header {
    position: absolute;
    z-index: 10;
  }
  main { height: 100% }

  &--container {
    display: flex;
    height: 100%;
  }

  &--background {
    width: 50%;
    background-image: url("../img/Bkg-Alessandro.jpg");
    background-size: contain;
    background-position: bottom left;
    background-repeat: no-repeat;
  }

  &--content {
    width: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 50px;

    & > [data-content-id],
    & > div:first-child { // ❗️Generated by NuxtContent❗️
      width: 100%;
      height: 100%;
    }

    div#temp {  // ❗️Generated by NuxtContent❗️
     // width: calc(100% - 50px);
      display: flex;
      justify-content: flex-start;
      align-items: center;
      margin-top: 50vh;
      transform: translateY(-50%);
      flex-wrap: wrap;
      pointer-events: none; // So it does not interfere with the Particle effect
    } 
    h1 {
      font-size: 10rem;
      text-transform: uppercase;
      letter-spacing: -1px;
      line-height: 0.9;
      color: $lightGrey;

      @include Barlow(500);

      & > span {
        @include Barlow(600);

        font-size: 14rem;
      }
    }

    h2 {
      white-space: nowrap;
      letter-spacing: -1px;
      line-height: 0.85;
      color: $accentcolor;
      margin-top: 0.5em;

      @include BodoniModa(500);
      @include responsive-font(font-size);

      & span.vividColor { color: $vividColor }
    }
    svg {
      width: 100%;
      height: auto;
    }

    @media screen and (max-width: map.get($breakpoints, tablet)) {
      padding: 4rem;
    }
  }
}

.aboutPage {
  background-image: linear-gradient(180deg, $deepBlack, $darkGrey);
  position: relative;

  &--firstPart,
  &--secondPart { min-height: 100vh }
  &--headline {
    margin-bottom: $standardMargin-X2;

    h2 {
      @include BodoniModa(500);
  
      color: $washedGrey;
      display: inline-block;
      position: relative;
      z-index: 1;
      text-shadow: 0 0 1px rgba(0, 0, 0, 0.5);

      &::after {
        content: "";
        display: block;
        height: 0.25em;
        width: 100%;
        transform: scaleX(0);
        background-color: $vividColor;
        position: relative;
        bottom: 0;
        z-index: -1;
        animation: none;
      }

      &.active::after { 
        animation: slideIn 0.8s ease-in forwards;
        animation-delay: 0.2s; 
      }

      @keyframes slideIn {
        0% { transform: scaleX(0) }
        100% { transform: scaleX(100%) }
      }
    }
    h4 { 
      margin-top: $standardMargin-X3;
      margin-bottom: $standardMargin; 
    }
  }
  &--lottie {
    float: right; 
    width: 20%; 
    margin: 0 0 4rem 4rem;

    @media screen and (max-width: map.get($breakpoints, mobile)) {
      float: none;
      width: auto;
      margin: 0 0 4rem 0;
    }
  }

  p { text-align: justify }

  &--image {
    border-radius: 16px;
    background-image: linear-gradient(
      13deg,
      hsl(349deg 59% 60%) 0%,
      hsl(1deg 60% 65%) 25%,
      hsl(12deg 63% 66%) 50%,
      hsl(21deg 62% 67%) 75%,
      hsl(28deg 58% 70%) 100%
    );
    padding: 4rem;
    margin-bottom: 2rem;
    border: 1px solid rgba(256, 256, 256, 1);

    & > img { 
      opacity: 0.75;
      filter: drop-shadow(0px 0px 6px black)
    }
  }
}

span.bigCircle[class*="inlineIcon--"] {
  $circleSize: 34rem;

  width: $circleSize !important;
  height: $circleSize !important;
  border-radius: 50%;
  shape-outside: circle(50%);
  float: left;
  margin-right:  math.div(-$circleSize, 6);
  background-color: $vueGreen;
  position: relative;
  left: math.div(-$circleSize, 4);

  &::before {
      background-color: $limeGreen !important;
      mask-size: 60% !important;
  }
}

.skillsPage {
  position: relative;
  background-image: radial-gradient(
    circle at 50% 100%,
    color.scale($darkGrey, $lightness: +15%, $space: oklch) 0%, 
    color.scale($darkGrey, $lightness: +15%, $space: oklch) 20%,
    color.scale($darkGrey, $lightness: +12%, $space: oklch) 20%, 
    color.scale($darkGrey, $lightness: +12%, $space: oklch) 28%,
    color.scale($darkGrey, $lightness: +9%, $space: oklch) 28%, 
    color.scale($darkGrey, $lightness: +9%, $space: oklch) 36%,
    color.scale($darkGrey, $lightness: +6%, $space: oklch) 36%, 
    color.scale($darkGrey, $lightness: +6%, $space: oklch) 44%,
    color.scale($darkGrey, $lightness: +3%, $space: oklch) 44%, 
    color.scale($darkGrey, $lightness: +3%, $space: oklch) 52%,
    #1f1f25 52%
  );

  @keyframes rotate {
    100% {
      transform: translate(-50%, -50%) rotate(1turn);
    }
  }

  &--navigation {
    margin-top: $standardMargin-X3;

    ul {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      margin-bottom: 4rem;
      list-style: none;
      padding: 0;

      @for $i from 2 through 5 {
        li:nth-child(#{$i}) {
          &::after,
          &::before { animation-delay: #{$i}s }
        }
      }
      li {
        width: 18%;
        display: inline-block;
        position: relative;
        overflow: hidden;
        margin: 2%;
        padding: 3rem;
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 12px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);

        & > .glow {
          width: calc(100% - 4px);
          height: calc(100% - 4px);
          position: absolute;
          border-radius: 12px;
          top: calc(2% - 3px);
          left: calc(2% - 3px);
          background-color: color.adjust($medGrey, $alpha: -0.1);

          @media screen and (max-width: map.get($breakpoints, desktop)) {
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(2% - 2px);
            left: calc(2% - 2px);
          }
        }

        &::after,
        &::before {
          content: "";
          width: 100%;
          height: 100%;
          display: inline-block;
          z-index: -1;
          position: absolute;
          top: 0;
          left: 0;
          transform: translate(-50%, -50%) rotate(0deg);
          background-repeat: no-repeat;
          background-position: 0 0;
          animation: rotate 4s linear infinite;
          transition: background-image 3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        &::before {
          filter: blur(14px);
          background-image: 
            conic-gradient(rgba(0,0,0,0), 
            $vueGreen, 
            rgba(0,0,0,0) 25%);
        }
        &::after {
          filter: blur(34px);
          background-image: 
            conic-gradient(rgba(0,0,0,0), 
            $vueGreen, 
            rgba(0,0,0,0) 25%);
        }
        &:hover {
          cursor: pointer;

          &::before,
          &::after {
            background-image: 
              conic-gradient(rgba(0,0,0,0), 
              $vividColor, 
              rgba(0,0,0,0) 20%);
          }

          & > a > img {
            opacity: 0.9;
            transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1);
          }
        }
        &:first-child { display: none }
        & > a {
          display: flex;
          width: 100%;
          height: 100%;

          & > img { 
            object-fit: contain;
            opacity: 0.6;
            transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);
          }
        }

        @media screen and (max-width: map.get($breakpoints, tablet)) {
          padding: 1.5rem;
        }
        @media screen and (max-width: map.get($breakpoints, mobile)) {
          width: 46%;
          padding: 1.5rem;
        }
      }
    }
  }
  &--otherSkills {
    ol {
      display: flex;
      flex-wrap: wrap;
      list-style: none;
      justify-content: center;
      padding: 0;
      margin: 0;

      & > li {
        width: calc(15% - 5rem);
        margin: 2.5rem;

        &::after {
          content: attr(alt);
          color: antiquewhite;
          display: block;
        }
        figure {
          height: 100%;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: flex-end;

          figcaption {
            @include Barlow(600);

            color: $lightGrey;       
            font-size: 2rem;
            text-align: center;
            letter-spacing: 0.025em;
            text-transform: uppercase;
            margin-top: 0.5em;
          }
        }

        @media screen and (max-width: map.get($breakpoints, tablet)) {
          width: calc(16% - 2rem);
          margin: 2rem 1rem;

          & img { padding: 1rem }
          & figure > figcaption { font-size: 1.8rem }
        }
        @media screen and (max-width: map.get($breakpoints, mobile)) {
          width: calc(30% - 1rem);
          margin: 2rem 1rem;

          & img { padding: 1rem }
        }
      }
    }
  }
}


@media screen and (max-width: map.get($breakpoints, tablet)) {
  .homePage {
    header { display: none } // Check it out later when the Skills page is ready

    &--background {
      width: 100%;
      height: 100vh;
      position: absolute;
      left: 0;
      background-position: bottom center;
    }
    &--content {
      width: 100%;
      height: 100%;
      position: relative;
      align-items: flex-start;
      justify-content: start;

      div#temp {
        margin-top: auto;
        transform: none;
      }
    }
    &--arrow {
      left: auto;
      transform: none;
      align-self: flex-end;
      margin-top: $standardMargin-X2;
    }
  }
}