@use 'sass:list';
@use "sass:map";
@use "sass:color"; 
@use 'variables' as *;



 svg .svg-elem-1 {
  stroke-dashoffset: 677.7525024414062px;
  stroke-dasharray: 677.7525024414062px;
  fill: transparent;
  -webkit-transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s,
                      fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.6s;
          transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s,
                      fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.6s;
}

.highlighted {
  .svg-elem-1 {
    stroke-dashoffset: 0;
    fill: $vueGreen;
    fill: transparent;
  }
}


svg .svg-elem-2 {
  stroke-dashoffset: 692.8136596679688px;
  stroke-dasharray: 692.8136596679688px;
  fill: transparent;
  -webkit-transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.12s,
                      fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.7s;
          transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.12s,
                      fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.7s;
}

.highlighted {
  .svg-elem-2 {
    stroke-dashoffset: 0;
    fill: $vueGreen;
  }
}




/** ––– Home - Typewriter effect ––––––––––––––––––––––––––––––––––– */
.cursor-container {
  display: inline-block;
  position: relative;
}

.cursor {
  display: inline-block;
  position: relative;
  margin: 0 auto;
  border-right: 6px solid rgba(255, 255, 255, 0.75);
  text-align: left;
  white-space: nowrap;
  overflow: hidden;
  visibility: hidden; /* Initially hidden for all cursors */
}

.typewriter-animation-1 {
  animation: 
    showCursor 0s linear 3.1s forwards, /* Make visible before animation starts */
    typewriter 2.5s steps(20) 3.1s 1 normal both, 
    blinkingCursor 500ms steps(20) 3.1s normal, 
    hideCursor 0s linear 5.6s forwards;
}

.typewriter-animation-2 {
  animation: 
    showCursor 0s linear 5.6s forwards, /* Make visible before animation starts */
    typewriter 2.5s steps(20) 5.6s 1 normal both, 
    blinkingCursor 500ms steps(20) 5.6s infinite;
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blinkingCursor {
  50% { border-right-color: transparent; }
}

@keyframes hideCursor {
  to { border-right-color: transparent; }
}

@keyframes showCursor {
  from { visibility: hidden; }
  to { visibility: visible; }
}
/** –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– */


/** ––– Home - SVG logo –––––––––––––––––––––––––––––––––––––––––––– */
$paths: (
  504.8827209472656px,
  344.9638671875px,
  533.4547119140625px,
  546.2145385742188px,
  546.2147216796875px,
  504.8797912597656px,
  603.34033203125px,
  558.7443237304688px,
  573.4409790039062px,
  524.1692504882812px,
  486.79974365234375px,
  717.8742065429688px,
  615.7418823242188px,
  738.6614379882812px,
  785.0479125976562px,
  762.751708984375px,
  738.65673828125px
);
$strokeStagger: 0.12s;
$fillStagger: 0.1s;
$totalPaths: list.length($paths);
$totalStrokeDuration: 1s + ($strokeStagger * ($totalPaths - 1));
$totalFillDuration: 0.7s + 0.8s + ($fillStagger * ($totalPaths - 1));
$totalAnimationDuration: max($totalStrokeDuration, $totalFillDuration);

//@debug $totalStrokeDuration; // Total stroke duration
//@debug $totalFillDuration;   // Total fill duration
//@debug $totalAnimationDuration; // Total animation duration


@each $path in $paths {
  $index: list.index($paths, $path);
  $stroke-delay: $strokeStagger * ($index - 1);
  $fill-delay: 0.8s + ($fillStagger * ($index - 1));

  svg .alessandro-#{$index} {
    stroke-dashoffset: $path;
    stroke-dasharray: $path;
    fill: transparent;
    transition-property: stroke-dashoffset, fill;
    transition-duration: 1s, 0.7s;
    transition-timing-function: 
      cubic-bezier(0.47, 0, 0.745, 0.715), 
      cubic-bezier(0.47, 0, 0.745, 0.715);
    transition-delay: #{$stroke-delay}, #{$fill-delay};
  }

  svg.active .alessandro-#{$index} {
    stroke-dashoffset: 0;
    fill: $lightGrey;
  }
}
/** –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– */



.atom {
  $colors: ($limeGreen, $vueGreen, $vividOrange);

	position: relative;
	width: 50%;
  margin:auto;
  aspect-ratio: 1/1;
  display: flex;
  align-items: center;
  justify-content: center;

  @media screen and (max-width: map.get($breakpoints, 'tablet')) {
    width: 100%;
  }

  &--center {
    width: 20%;
    height: 20%;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: 1px solid $washedGrey;
    overflow: hidden;
    border-radius: 50%;
    box-shadow: 0 0 20px $washedGrey, 0 0 60px $washedGrey;

    animation: cycleColors 6s linear infinite;

  }
  &--orbit {
    position: absolute;
    translate: -50%, -50%;
    border-radius: 50%;
    transform-style: preserve-3d;
    animation: rotate 3s linear infinite;

    &--electron {
      width: 15%;
      height: 0;
      padding-bottom: 15%;
      border-radius: 50%;
      position: absolute;
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%);
      background: list.nth($colors, 3);          
    }

    @for $i from 1 through 3 {
      &:nth-of-type(#{$i + 1}) {
        width: 50%;
        height: 100%;
        border: 1px solid color.scale(list.nth($colors, $i), $alpha: -70%);
        box-shadow: 0 0 16px color.scale(list.nth($colors, $i), $alpha: -70%), 0 0 1px list.nth($colors, $i);
        animation-duration: calc(2.5s * $i);

        & > div { 
          background: list.nth($colors, $i);
          box-shadow: 0 0 10px list.nth($colors, $i), 0 0 30px list.nth($colors, $i);
 
        }
      }
    }
  }

  @keyframes rotate {
    0% { transform: rotate(0deg) }
    100% { transform: rotate(360deg) }
  }

  @keyframes cycleColors {
    0% {
      background: color.scale(list.nth($colors, 1), $alpha: -40%);
      box-shadow: 0 0 20px list.nth($colors, 1), 0 0 50px list.nth($colors, 1);
      outline: 1px solid color.scale(list.nth($colors, 1), $alpha: -20%);
    }
    33.33% {
      background: color.scale(list.nth($colors, 2), $alpha: -40%);
      box-shadow: 0 0 20px list.nth($colors, 2), 0 0 50px list.nth($colors, 2);
      outline: 1px solid color.scale(list.nth($colors, 2), $alpha: -20%);
    }
    66.66% {
      background: color.scale(list.nth($colors, 3), $alpha: -40%);
      box-shadow: 0 0 20px list.nth($colors, 3), 0 0 50px list.nth($colors, 3);
      outline: 1px solid color.scale(list.nth($colors, 3), $alpha: -20%);
    }
    100% {
      background: color.scale(list.nth($colors, 1), $alpha: -40%);
      box-shadow: 0 0 20px list.nth($colors, 1), 0 0 50px list.nth($colors, 1);
      outline: 1px solid color.scale(list.nth($colors, 1), $alpha: -20%);
    }
  }
  
}

